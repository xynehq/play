# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is generally recommended to include the cache and path variables, and exclude
#  the XML files, but some files may need to be included if the XML contains project-specific
#  path variables.
.idea/

# VSCode
.vscode/
*.code-workspace

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
# Windows thumbnail cache files
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# Linux
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# SFT-Play specific ignores

# Data directories - keep structure but ignore contents
data/raw/*
data/processed/*
data/processed_with_style/*
data/rendered/*
data/temp/*
data/cache/*
!data/raw/.gitkeep
!data/processed/.gitkeep
!data/processed_with_style/.gitkeep
!data/rendered/.gitkeep

# Model outputs and training artifacts
outputs/*
!outputs/.gitkeep
checkpoints/
*.pth
*.pt
*.bin
*.safetensors
*.ckpt
*.h5
*.hdf5
*.pkl
*.pickle
*data
# LoRA adapters and fine-tuned models
adapters/*
!adapters/.gitkeep
lora_weights/
adapter_model.bin
adapter_config.json
pytorch_model.bin
training_args.bin

# Experiment tracking and monitoring
wandb/
tensorboard_logs/
outputs/tb/
mlruns/
.mlflow/
trackio_logs/
runs/

# Large dataset files
*.csv
*.json
*.jsonl
*.parquet
*.arrow
*.feather
*.tsv
*.txt

# DAPT-specific files
*.docx
*.doc
dpip_cpt.jsonl
cpt_*.jsonl
domain_*.jsonl

# Exceptions: keep essential project files
!configs/*.yaml
!configs/*.yml
!configs/*.json
!chat_templates/*.jinja
!chat_templates/*.j2
!requirements.txt
!pyproject.toml
!README.md
!LICENSE
!*.py
!demo_inputs.txt
!example_*.txt
!anchor_instr.jsonl
!test_dapt_integration.py

# Keep results directory and images
!results/
!results/*.png
!results/*.jpg
!results/*.jpeg
!results/*.gif
!results/*.svg

# Hugging Face and model caches
.cache/
transformers_cache/
huggingface_hub/
~/.cache/huggingface/

# Merged model outputs
merged_fp16/
merged_models/

#unsloth specific files
unsloth_cache/
unsloth_compiled_cache/
# Temporary files
*.tmp
*.temp
*.bak
*.swp
# Temporary inference outputs
preds.txt
predictions.txt
inference_results.txt

# Training logs
training.log
eval.log
*.log

# TensorBoard PID file
.tensorboard.pid

# GPU profiling
*.prof
*.nvprof

# Compressed files
*.zip
*.tar.gz
*.tar.bz2
*.rar
*.7z

# Docker
.dockerignore
Dockerfile.tmp

# Secrets and API keys
.env.local
.env.production
.env.staging
secrets.yaml
api_keys.txt
*.key
*.pem

# Claude Code session data
CLAUDE.md

# Backup files
*.bak
*.backup
*.old
*.orig

# Editor swap files
*.swp
*.swo
*~

# Node.js (if using any JS tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Conda
.conda/

models/*
!models/.gitkeep
